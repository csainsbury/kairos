version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    env_file:
      - ../.env.production
    volumes:
      - ../uploads:/app/uploads
      - /var/log/kairos:/app/logs
    environment:
      - FLASK_ENV=production
    networks:
      - kairos-net
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always

  db:
    image: postgres:13-alpine
    env_file:
      - ../.env.production
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ../backups:/backups
    networks:
      - kairos-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - kairos-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  nginx:
    image: nginx:1.21-alpine
    volumes:
      - ../nginx/conf.d:/etc/nginx/conf.d
      - ../ssl_certs:/etc/ssl/certs
      - ../static:/app/static
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      app:
        condition: service_healthy
    networks:
      - kairos-net
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  backup:
    image: postgres:13-alpine
    volumes:
      - ../backups:/backups
    networks:
      - kairos-net
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - BACKUP_DIR=/backups
    command: >
      sh -c "
        mkdir -p /backups &&
        echo '#!/bin/sh' > /usr/local/bin/backup.sh &&
        echo 'TIMESTAMP=$$(date +%Y%m%d_%H%M%S)' >> /usr/local/bin/backup.sh &&
        echo 'pg_dump -h $$POSTGRES_HOST -U $$POSTGRES_USER -d $$POSTGRES_DB -F c -f $$BACKUP_DIR/kairos_$$TIMESTAMP.backup' >> /usr/local/bin/backup.sh &&
        echo 'find $$BACKUP_DIR -name \"*.backup\" -type f -mtime +7 -delete' >> /usr/local/bin/backup.sh &&
        chmod +x /usr/local/bin/backup.sh &&
        echo '0 1 * * * /usr/local/bin/backup.sh' > /etc/crontabs/root &&
        crond -f
      "
    restart: always

volumes:
  postgres_data:
  redis_data:

networks:
  kairos-net:
    driver: bridge