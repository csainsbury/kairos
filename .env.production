# Production Environment Configuration
# IMPORTANT: Ensure all sensitive values are properly secured in production

# Flask settings
FLASK_ENV=production
SECRET_KEY=change-this-to-a-secure-random-value-in-production

# LLM API settings
LLM_API_KEY=replace-with-actual-api-key
LLM_API_URL=https://api.deepseek-api-endpoint/v1/chat/completions

# Todoist API settings
TODOIST_API_KEY=replace-with-actual-todoist-api-key
TODOIST_CLIENT_ID=replace-with-actual-todoist-client-id
TODOIST_CLIENT_SECRET=replace-with-actual-todoist-client-secret
TODOIST_WEBHOOK_URL=https://your-domain.com/todoist/webhook

# Google Calendar API settings
GOOGLE_CLIENT_ID=replace-with-actual-google-client-id
GOOGLE_CLIENT_SECRET=replace-with-actual-google-client-secret
GOOGLE_REDIRECT_URI=https://your-domain.com/calendar/oauth2callback

# Database
POSTGRES_USER=kairos_prod
POSTGRES_PASSWORD=change-to-secure-password
POSTGRES_DB=kairos_production
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

# Domain Configuration
DEFAULT_DOMAIN_WEIGHTS=work:1.0,life_admin:0.8,general_life:0.6
MAX_DOMAIN_TASKS=1000

# Redis cache (if needed)
REDIS_URL=redis://redis:6379/0

# Domain configuration
DOMAIN_NAME=your-domain.com

# Email settings
MAIL_SERVER=smtp.example.com
MAIL_PORT=587
MAIL_USE_TLS=True
MAIL_USE_SSL=False
MAIL_USERNAME=replace-with-actual-email
MAIL_PASSWORD=replace-with-actual-password
MAIL_DEFAULT_SENDER=kairos-app@your-domain.com
DEFAULT_REPORT_EMAIL=reports@your-domain.com

# Logging
LOG_DIR=/var/log/kairos
LOG_LEVEL=WARNING
LOG_FORMAT=json  # Use structured JSON logging in production

# API request retry settings
DEFAULT_MAX_RETRIES=5
DEFAULT_RETRY_BACKOFF=2.0
DEFAULT_RETRY_TIMEOUT=30

# Security Configuration
ALLOWED_HOSTS=your-domain.com,www.your-domain.com
SESSION_COOKIE_SECURE=True
REMEMBER_COOKIE_SECURE=True
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE=Strict
SESSION_LIFETIME=1800
WTF_CSRF_TIME_LIMIT=3600

# Rate Limiting
RATE_LIMIT_WINDOW=60
RATE_LIMIT_MAX_REQUESTS=30
RATE_LIMIT_BLOCK_THRESHOLD=5

# IP Whitelisting (comma-separated)
IP_WHITELIST=127.0.0.1,::1

# Admin Authentication - Generate these with scripts/generate_admin_password.py
# Example: python scripts/generate_admin_password.py --generate
ADMIN_USERNAME=admin
ADMIN_PASSWORD_HASH=replace_with_generated_hash
ADMIN_PASSWORD_SALT=replace_with_generated_salt